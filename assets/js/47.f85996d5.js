(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{660:function(t,e,s){"use strict";s.r(e);var a=s(47),r=Object(a.a)({},(function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("WebStorm for Windows 的 terminal 预设是使用 Windows 内建的 Command Prompt，但可惜内建的 Command Prompt 不强。")]),t._v(" "),s("h2",{attrs:{id:"设置-webstorm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置-webstorm"}},[t._v("#")]),t._v(" 设置 WebStorm")]),t._v(" "),s("p",[t._v("设置路径："),s("code",[t._v("File -> Settings -> Tools -> Terminal")]),t._v(" "),s("code",[t._v('Shell path : "D:\\Git\\bin\\sh.exe" -login -i')]),t._v("\n无需重启 WebStorm，现在你可以看到 WebStorm 的 terminal 已成功切换为 git bash；")]),t._v(" "),s("p",[t._v("这里的bash指的是你git安装文件下bin文件里的bash.exe，不是你在系统中执行的那个exe。因为：")]),t._v(" "),s("blockquote",[s("p",[s("code",[t._v("git-bash.exe")]),t._v(" won't work, because it is a terminal emulator for "),s("code",[t._v("sh")]),t._v(" shell with its own window/UI, not a shell. WebStorm provides its own terminal emulator in "),s("strong",[t._v("Terminal")]),t._v(" tool window. It's impossible to integrate one terminal emulator inside another, because all integration is based on parsing ANSI/VT sequences from underlying shell.")])]),t._v(" "),s("p",[t._v("之前曾尝试过内置cmder，可惜每次打开只是弹出一个cmder的窗口，不是内置在WebStorm，大概也是上面的原因。")]),t._v(" "),s("h2",{attrs:{id:"中文乱码问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#中文乱码问题"}},[t._v("#")]),t._v(" 中文乱码问题")]),t._v(" "),s("p",[t._v("完成上面的设置之后，你会发现 WebStorm terminal 显示中文乱码，解决方案如下：\n在 Git 安装目录中的 etc 目录下找到 bash.bashrc 文件，在该文件头部加入：")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANG")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("zh_CN.utf-8alias "),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ls")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls --show-control-chars --color=auto'")]),t._v("\n")])])]),s("p",[t._v("保存，然后就可以显示中文了。")]),t._v(" "),s("p",[t._v("如果中文这时候还是乱码，那么把 "),s("code",[t._v("export LANG=zh_CN.utf-8")]),t._v(" 替换成：")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("export LC_ALL=zh_CN.UTF-8\n")])])]),s("p",[t._v("另外需要提及的一点是“HOME”环境变量的配置所可能产生的影响，如果有的时候.gitconfig、.bashrc等一些文件的配置没有生效，那么就需要注意这种情况。例如我自己的电脑上，我在系统环境变量中配置了HOME")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[t._v("C:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("msys64"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("chen\n")])])]),s("p",[t._v("我测试发现，直接点击运行 git-bash.exe 的时候，会先加载 "),s("code",[t._v("bash.bashrc")]),t._v(" 文件，然后还会加载 HOME 变量所在位置的 "),s("code",[t._v(".bashrc")]),t._v(" 文件，"),s("code",[t._v(".gitconfig")]),t._v(" 会使用 HOME 变量所配置路径下的 "),s("code",[t._v(".gitconfig")]),t._v("。如果不配置 HOME，则会使用系统 "),s("code",[t._v("C:\\Users\\")]),t._v(" 当前用户下的配置。\n但是在 intelliJ Idea 下点击 Terminal 窗口的时候，则不会受 HOME 变量配置的影响，只会加载 "),s("code",[t._v("bash.bashrc")]),t._v(" 文件。所使用的 "),s("code",[t._v(".gitconfig")]),t._v(" 是 "),s("code",[t._v("C:\\Users\\")]),t._v(" 当前用户下的。")]),t._v(" "),s("hr")])}),[],!1,null,null,null);e.default=r.exports}}]);