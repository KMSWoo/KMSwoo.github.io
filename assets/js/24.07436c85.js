(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{638:function(t,e,i){"use strict";i.r(e);var a=i(47),c=Object(a.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("p",[t._v("是贝塞尔曲线，不是在生存链顶端的贝尔，也不是美女贝金赛尔。")]),t._v(" "),i("h2",{attrs:{id:"属性定义及使用说明"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#属性定义及使用说明"}},[t._v("#")]),t._v(" 属性定义及使用说明")]),t._v(" "),i("p",[t._v("是transition-timing-function属性指定切换效果的速度。此属性允许一个过渡效果，以改变其持续时间的速度。")]),t._v(" "),i("table",[i("thead",[i("tr",[i("th",{staticStyle:{"text-align":"left"}},[t._v("值")]),t._v(" "),i("th",{staticStyle:{"text-align":"left"}},[t._v("描述")])])]),t._v(" "),i("tbody",[i("tr",[i("td",{staticStyle:{"text-align":"left"}},[t._v("linear")]),t._v(" "),i("td",{staticStyle:{"text-align":"left"}},[t._v("规定以相同速度开始至结束的过渡效果（等于 cubic-bezier(0,0,1,1)）。")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"left"}},[t._v("ease")]),t._v(" "),i("td",{staticStyle:{"text-align":"left"}},[t._v("规定慢速开始，然后变快，然后慢速结束的过渡效果（cubic-bezier(0.25,0.1,0.25,1)）。")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"left"}},[t._v("ease-in")]),t._v(" "),i("td",{staticStyle:{"text-align":"left"}},[t._v("规定以慢速开始的过渡效果（等于 cubic-bezier(0.42,0,1,1)）。")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"left"}},[t._v("ease-out")]),t._v(" "),i("td",{staticStyle:{"text-align":"left"}},[t._v("规定以慢速结束的过渡效果（等于 cubic-bezier(0,0,0.58,1)）。")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"left"}},[t._v("ease-in-out")]),t._v(" "),i("td",{staticStyle:{"text-align":"left"}},[t._v("规定以慢速开始和结束的过渡效果（等于 cubic-bezier(0.42,0,0.58,1)）。")])]),t._v(" "),i("tr",[i("td",{staticStyle:{"text-align":"left"}},[t._v("cubic-bezier("),i("em",[t._v("n")]),t._v(","),i("em",[t._v("n")]),t._v(","),i("em",[t._v("n")]),t._v(","),i("em",[t._v("n")]),t._v(")")]),t._v(" "),i("td",{staticStyle:{"text-align":"left"}},[t._v("在 cubic-bezier 函数中定义自己的值。可能的值是 0 至 1 之间的数值。")])])])]),t._v(" "),i("h2",{attrs:{id:"cubic-bezier-函数"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#cubic-bezier-函数"}},[t._v("#")]),t._v(" cubic-bezier() 函数")]),t._v(" "),i("p",[t._v("如果 不满足于预定好的效果，可以使用函数自定义。")]),t._v(" "),i("p",[t._v("cubic-bezier() 函数定义了一个贝塞尔曲线(Cubic Bezier)。")]),t._v(" "),i("p",[t._v("贝塞尔曲线曲线由四个点 P0，P1，P2 和 P3 定义。P0 和 P3 是曲线的起点和终点。P0是（0,0）并且表示初始时间和初始状态，P3是（1,1）并且表示最终时间和最终状态。")]),t._v(" "),i("p",[i("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2019/10/cubic-bezier-01.png",alt:"img"}})]),t._v(" "),i("p",[i("img",{attrs:{src:"https://www.runoob.com/wp-content/uploads/2019/10/cubic-bezier-02.jpg",alt:"img"}})]),t._v(" "),i("p",[t._v("从上图我们需要知道的是 cubic-bezier 的取值范围:")]),t._v(" "),i("div",{staticClass:"language- extra-class"},[i("pre",{pre:!0,attrs:{class:"language-text"}},[i("code",[t._v("P0：默认值 (0, 0)\nP1：动态取值 (x1, y1)\nP2：动态取值 (x2, y2)\nP3：默认值 (1, 1)\n")])])]),i("p",[t._v("我们需要关注的是 P1 和 P2 两点的取值，而其中 X 轴的取值范围是 0 到 1，当取值超出范围时 cubic-bezier 将失效；Y 轴的取值没有规定，当然也毋须过大。")]),t._v(" "),i("p",[t._v("最直接的理解是，将以一条直线放在范围只有 1 的坐标轴中，并从中间拿出两个点来拉扯（X 轴的取值区间是 [0, 1]，Y 轴任意），最后形成的曲线就是动画的速度曲线。")]),t._v(" "),i("p",[t._v("cubic-bezier() 可用于 animation-timing-function 和 transition-timing-function 属性。")]),t._v(" "),i("hr")])}),[],!1,null,null,null);e.default=c.exports}}]);