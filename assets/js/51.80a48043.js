(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{664:function(t,e,n){"use strict";n.r(e);var l=n(47),r=Object(l.a)({},(function(){var t=this,e=t.$createElement,n=t._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("p",[t._v("具体情况具体分析，不能一概而论，要考虑以下这么几个问题：")]),t._v(" "),n("ul",[n("li",[t._v("你自己的 Web 站点带宽有多大？有没有做全国甚至全球多地部署（不同地区用户访问就近加载）？如果没有，那么 CDN 的优势就在于此。")]),t._v(" "),n("li",[t._v("你页面上有多少个外链资源文件（JS / CSS / IMG 等等）？浏览器会限制同域资源并发请求数（一般是 10），引入 CDN 跟你自己的 Web 站点域名不同，就可以打破浏览器的并发限制，从而提高整体的下载速度。但如果你一共也没多少个资源文件，强行拆成多个域名企图并发下载，反而会产生多线程小文件 I/O 瓶颈。")]),t._v(" "),n("li",[t._v("按需引入问题。确实存在只使用了依赖包很少一部分功能、但依赖包本体很大的问题。但你按需引入的体积带来减少的优势真的很明显吗？如果只是少个几十 KB 其实压根不叫优化。")])]),t._v(" "),n("hr"),t._v(" "),n("p",[t._v("终极解决方案：你可以把自己的 Web 站点整站都 CDN 化啊，即能享受到 npm 按需引入的优势，又能拥有前面 1、2 两点的优势。")])])}),[],!1,null,null,null);e.default=r.exports}}]);