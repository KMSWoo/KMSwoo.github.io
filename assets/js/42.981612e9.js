(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{656:function(t,a,e){"use strict";e.r(a);var s=e(47),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("Vue Router 是 Vue.js (opens new window)官方的路由管理器。它和 Vue.js 的核心深度集成，让构建单页面应用变得易如反掌。")]),t._v(" "),e("h2",{attrs:{id:"一-认识路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#一-认识路由"}},[t._v("#")]),t._v(" 一. 认识路由")]),t._v(" "),e("h3",{attrs:{id:"_1-什么是路由-理解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是路由-理解"}},[t._v("#")]),t._v(" 1.什么是路由(理解)")]),t._v(" "),e("ul",[e("li",[t._v("路由解释\n"),e("ul",[e("li",[t._v("路由(routing)就是通过互联的网络把信息从源地址传输到目的地址的活动")]),t._v(" "),e("li",[t._v("路由中有一个非常重要的概念叫路由表\n"),e("ul",[e("li",[t._v("路由表本质上就是一个映射表, 决定了数据包的指向")])])])])]),t._v(" "),e("li",[t._v("路由器\n"),e("ul",[e("li",[t._v("路由器提供了两种机制: 路由和转送.\n"),e("ul",[e("li",[t._v("路由是决定数据包从"),e("strong",[t._v("来源")]),t._v("到"),e("strong",[t._v("目的地")]),t._v("的路径")]),t._v(" "),e("li",[t._v("转送将"),e("strong",[t._v("输入端")]),t._v("的数据转移到合适的"),e("strong",[t._v("输出端")])])])])])])]),t._v(" "),e("blockquote",[e("p",[t._v("路由是根据不同的ur地址展示不同的内容或页面;")]),t._v(" "),e("p",[t._v("路由是一个比较广义和抽象的概念, 路由的本质就是对应关系")])]),t._v(" "),e("h3",{attrs:{id:"_2-后端路由阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-后端路由阶段"}},[t._v("#")]),t._v(" 2.后端路由阶段")]),t._v(" "),e("ul",[e("li",[t._v("在早期的网站开发整个HTML页面是由服务器来渲染的\n"),e("ul",[e("li",[t._v("服务器直接将渲染好对应的HTML页面, 响应给客户端展示")])])]),t._v(" "),e("li",[t._v("后端路由\n"),e("ul",[e("li",[t._v("浏览器在地址栏中切换不同的url时, 每次都向后台服务器发出请求, 服务器响应请求")]),t._v(" "),e("li",[t._v("在后台拼接html文件传给前端显示, 返回不同的页面")]),t._v(" "),e("li",[t._v("意味着浏览器会刷新页面，网速慢的话说不定屏幕全白再有新内容。后端路由的另外一个极大的问题就是 前后端不分离")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200804210434.png",alt:"img"}})]),t._v(" "),e("ul",[e("li",[t._v("后端路由的缺点\n"),e("ul",[e("li",[t._v("整个页面的模块由后端人员来编写和维护的, 不易维护")]),t._v(" "),e("li",[t._v("通常情况下HTML代码和以及对应的后端逻辑代码会混在一起, 编写和维护都是非常糟糕的事情")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-前端路由阶段"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-前端路由阶段"}},[t._v("#")]),t._v(" 3.前端路由阶段")]),t._v(" "),e("ul",[e("li",[t._v("前后端分离阶段:\n"),e("ul",[e("li",[t._v("随着 Ajax 出现, 有了前后端分离的开发模式")]),t._v(" "),e("li",[t._v("后端只提供 API 来返回数据, 前端通过 Ajax 获取数据, 通过 JS 将数据渲染到页面中")]),t._v(" "),e("li",[t._v("这样做最大优点就是前后端责任清晰, 后端专注于数据上, 前端专注于交互和可视化上")]),t._v(" "),e("li",[t._v("并且移动端 (ISO/Android) 出现后, 后端不需要进行任何处理, 依然使用之前一套 API 即可")])])]),t._v(" "),e("li",[t._v("什么是SPA\n"),e("ul",[e("li",[t._v("SPA是 single page web application 的简称, 译为单页Web应用")]),t._v(" "),e("li",[t._v("简单说 SPA 就是一个 web 项目只有一个 html 页面, 一旦页面加载完成, SPA 不会因为用户的操作进行页面的重新加载或跳转")]),t._v(" "),e("li",[t._v("取而代之的是利用 JS 动态的变换 html 的内容, 从而模拟多个视图间跳转")])])]),t._v(" "),e("li",[t._v("单页面富应用 (SPA)\n"),e("ul",[e("li",[t._v("其实SPA最主要的特点就是在前后端分离的基础上加了一层前端路由")]),t._v(" "),e("li",[t._v("也就是前端来维护一套路由规则")])])]),t._v(" "),e("li",[t._v("前端路由的核心是什么呢?\n"),e("ul",[e("li",[e("strong",[t._v("改变URL, 但是页面不进行整体的刷新")])])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210235.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"二-前端路由的规则"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#二-前端路由的规则"}},[t._v("#")]),t._v(" 二. 前端路由的规则")]),t._v(" "),e("h3",{attrs:{id:"_1-url的hash"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-url的hash"}},[t._v("#")]),t._v(" 1.URL的hash")]),t._v(" "),e("ul",[e("li",[t._v("URL的hash也就是锚点(#), 本质上是改变window.location的href属性")]),t._v(" "),e("li",[t._v("我们可以直接赋值"),e("code",[t._v("location.hash")]),t._v("改变href, 但是页面不发生刷新")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210238.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"_2-html5的history模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-html5的history模式"}},[t._v("#")]),t._v(" 2.HTML5的history模式")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("history接口是HTML5新增的, 它有五种模式改变URL而不刷新页面")])]),t._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("history.pushState()\n")])])]),e("ul",[e("li",[t._v("类似: 进栈出栈, 先进后出")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210245.png",alt:"img"}})]),t._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("history.replaceState()\n")])])]),e("ul",[e("li",[t._v("替换URL, 没有回退")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210248.png",alt:"img"}})]),t._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("history.back()\n")])])]),e("ul",[e("li",[t._v("回退到上一次的URL")])])]),t._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("history.forward()\n")])])]),e("ul",[e("li",[t._v("前进上一次的URL")])])]),t._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("history.go(Number)\n")])])]),e("ul",[e("li",[e("code",[t._v("Number")]),t._v(": 前进或回退到指定的URL")])])])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210253.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"三-vue-router基础"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#三-vue-router基础"}},[t._v("#")]),t._v(" 三. Vue-Router基础")]),t._v(" "),e("h3",{attrs:{id:"_1-认识vue-router"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-认识vue-router"}},[t._v("#")]),t._v(" 1.认识vue-router")]),t._v(" "),e("ul",[e("li",[t._v("vue-router是Vue.js官方的路由插件, 它和vue.js是深度继承的, 用于构建单页面应用 ("),e("a",{attrs:{href:"https://link.juejin.cn?target=undefined",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),e("OutboundLink")],1),t._v(")")]),t._v(" "),e("li",[t._v("vue-router是基于路由和组件的\n"),e("ul",[e("li",[e("strong",[t._v("路由用于设定访问路径, 将路径和组件映射起来")])]),t._v(" "),e("li",[e("strong",[t._v("在vue-router的单页面应用中, 页面的路径的改变就是组件的切换")])])])])]),t._v(" "),e("h3",{attrs:{id:"_2-安装与使用vue-router"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-安装与使用vue-router"}},[t._v("#")]),t._v(" 2.安装与使用vue-router")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("步骤一: npm安装")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("npm install vue-router --save")])])])]),t._v(" "),e("li",[e("p",[t._v("步骤二: 在模块工程中使用它(因为是一个插件, 所以通过"),e("code",[t._v("Vue.use()")]),t._v("来安装路由功能)")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("① "),e("strong",[t._v("导入")]),t._v("路由对象, 并且调用"),e("code",[t._v("Vue.use(VueRouter)")]),t._v("安装路由功能")])]),t._v(" "),e("li",[e("p",[t._v("② 创建"),e("strong",[t._v("路由实例,")]),t._v(" 并传入路由"),e("strong",[t._v("映射配置")])])]),t._v(" "),e("li",[e("p",[t._v("③ 在主入口文件: 引入创建的路由实例, Vue实例中"),e("strong",[t._v("挂载路由实例")])])]),t._v(" "),e("li",[e("details",[e("summary",[t._v("1.配置Vue-Router (图示)")]),t._v(" "),e("pre",[e("img",{staticClass:"medium-zoom-image",attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210307.png",alt:"image-20200605221255068",loading:"lazy"}}),t._v("\n")])])])])]),t._v(" "),e("li",[e("p",[t._v("步骤三: 使用"),e("code",[t._v("vue-router")])]),t._v(" "),e("ul",[e("li",[e("p",[t._v("创建路由组件")])]),t._v(" "),e("li",[e("p",[t._v("配置路由映射(组件和路径映射的关系)")])]),t._v(" "),e("li",[e("p",[t._v("使用路由 "),e("code",[t._v('<router-link to="/path">')]),t._v("和 "),e("code",[t._v("<router-view>")])])]),t._v(" "),e("li",[e("details",[e("summary",[t._v("2.使用Vue-Router (图示)")]),t._v(" "),e("pre",[e("img",{staticClass:"medium-zoom-image",attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210322.png",alt:"image-20200605222206637",loading:"lazy"}}),t._v("\n")])])])])])]),t._v(" "),e("h3",{attrs:{id:"_3-路由组件详解"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-路由组件详解"}},[t._v("#")]),t._v(" 3.路由组件详解")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v("<router-link>")]),t._v(": 该标签是已经内置全局的组件, 它会被渲染成一个"),e("code",[t._v("<a>")]),t._v("标签")]),t._v(" "),e("ul",[e("li",[e("p",[e("code",[t._v('to="path"')]),t._v(": 该属性会被渲染为"),e("code",[t._v("href")]),t._v("属性")])]),t._v(" "),e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('to="path"\n')])])]),e("p",[t._v(": 属性的值会渲染为 # 开头的")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("hash\n")])])]),e("p",[t._v("地址")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("path")]),t._v(": 在路由中配置的 path 路径")])])])])]),t._v(" "),e("li",[e("p",[e("code",[t._v("<router-view>")]),t._v(": 该标签会根据当前的路径, 动态渲染出相对应的组件")])]),t._v(" "),e("li",[e("p",[t._v("在路由切换时, 切换的是"),e("code",[t._v("<router-view>")]),t._v("挂载的组件, 其他内容不会发生改变")])])]),t._v(" "),e("h2",{attrs:{id:"四-路由配置其他补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#四-路由配置其他补充"}},[t._v("#")]),t._v(" 四. 路由配置其他补充")]),t._v(" "),e("h3",{attrs:{id:"_1-路由的默认路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-路由的默认路径"}},[t._v("#")]),t._v(" 1.路由的默认路径")]),t._v(" "),e("blockquote",[e("p",[t._v("场景: 进入网站首页, 希望"),e("code",[t._v("<router-view>")]),t._v("渲染首页的内容")])]),t._v(" "),e("ul",[e("li",[t._v("在路由规则中添加"),e("strong",[t._v("默认路径的重定向")])])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("const routes = [\n    {\n      // 配置默认路径\n      path: '/',\n      // 重定向到/home路径\n      redirect: '/home'\n    }\n]\n复制代码\n")])])]),e("h3",{attrs:{id:"_2-路径的history模式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-路径的history模式"}},[t._v("#")]),t._v(" 2.路径的History模式")]),t._v(" "),e("blockquote",[e("p",[t._v("场景: 页面显示的URL, 不希望是哈希值带 "),e("code",[t._v("#/home")]),t._v(", 希望显示正常的URL: /home")])]),t._v(" "),e("ul",[e("li",[t._v("在"),e("code",[t._v("VueRouter")]),t._v("实例"),e("code",[t._v("option")]),t._v("中设置"),e("code",[t._v("mode")]),t._v("为"),e("code",[t._v("history")]),t._v("模式即可")])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("// 创建VueRouter对象\nconst router = new VueRouter({\n  routes,// 路由规则\n  mode: 'history'// URL显示的模式\n})\n复制代码\n")])])]),e("h3",{attrs:{id:"_3-router-link和配置路由的属性补充"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-router-link和配置路由的属性补充"}},[t._v("#")]),t._v(" 3.router-link和配置路由的属性补充")]),t._v(" "),e("ul",[e("li",[e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("route-link")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("其他的属性")]),t._v(" "),e("ul",[e("li",[e("code",[t._v('tag=""')]),t._v(": tag可以指定"),e("code",[t._v("<router-link>")]),t._v("组件渲染成什么元素")]),t._v(" "),e("li",[e("code",[t._v("replace")]),t._v(": 没有回退history记录, 前进没有效果")]),t._v(" "),e("li",[e("code",[t._v('active-class=""')]),t._v(": 当"),e("code",[t._v("<router-link>")]),t._v("对应的路径匹配成功时, 会自动给当前元素添加一个"),e("code",[t._v("router-link-active")]),t._v("的"),e("code",[t._v("class")]),t._v(", 设置"),e("code",[t._v("active-class")]),t._v("可以更改默认的名称")])])])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- tag: 指定`<router-link>`组件渲染成什么元素 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- replace: 没有history记录,前后键没有用 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- active-class: 修改匹配成功默认添加的class类名 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/home"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("tag")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("replace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("active-class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("active"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("首页"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/about"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("tag")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("button"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("replace")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("active-class")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("active"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("关于页面"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("ul",[e("li",[e("p",[t._v("配置路由的属性:")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("linkActiveClass\n")])])]),e("ul",[e("li",[t._v("作用: 当"),e("code",[t._v("<router-link>")]),t._v("对应的路径匹配成功时, 设置默认添加的类名")])])])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("const router = new VueRouter({\n  routes,// 路由的映射规则\n  mode: 'history',// 模式\n  linkActiveClass: 'active'// 设置默认匹配添加地类\n})\n")])])]),e("h3",{attrs:{id:"_4-编程式导航"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-编程式导航"}},[t._v("#")]),t._v(" 4.编程式导航")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("场景: 没有使用")]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("p",[t._v("全局组件, 来跳转URL")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("this.$router.push('path')")]),t._v(": 来实现跳转URL, 有回退history记录")]),t._v(" "),e("li",[e("code",[t._v("this.$router.replace('path')")]),t._v(": 来实现跳转URL, 没有回退history记录")])])])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("  methods: {\n    home() {\n      // 没有使用`"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("`全局组件,来跳转URL,如何实现\n      // this.$router.push('/home') // 有回退记录\n      this.$router.replace('/home') // 没有回退记录\n    },\n    about() {\n      // this.$router.push('/about')\n      this.$router.replace('/about')\n    }\n  }\n复制代码\n")])])]),e("h3",{attrs:{id:"_5-动态路由匹配"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-动态路由匹配"}},[t._v("#")]),t._v(" 5.动态路由匹配")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("某些情况, 我们需要动态的来设置path路径, 比如进入用户页面, 希望显示的是如下路径")]),t._v(" "),e("ul",[e("li",[t._v("/user/aaa 或 /user/bbb")]),t._v(" "),e("li",[t._v("除了有前面的 /user 之外, 后面还跟上了用户的ID")]),t._v(" "),e("li",[t._v("这种 path 和 Component 的匹配关系, 称之为动态路由(也是路由传递数据的一种方式)")])])]),t._v(" "),e("li",[e("p",[t._v("动态路由匹配步骤")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("1.配置动态路由参数")]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("const routes = [{\n  path: '/user/:userId',\n  component: User\n}]\n复制代码\n")])])])]),t._v(" "),e("li",[e("p",[t._v("2.在APP.vue组件中传递参数")])]),t._v(" "),e("li",[e("p",[t._v("3.路由组件中通过 "),e("code",[t._v("$route.params")]),t._v(" 获取路由参数")])])])])]),t._v(" "),e("h2",{attrs:{id:"五-路由懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#五-路由懒加载"}},[t._v("#")]),t._v(" 五. 路由懒加载")]),t._v(" "),e("h3",{attrs:{id:"_1-认识路由懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-认识路由懒加载"}},[t._v("#")]),t._v(" 1.认识路由懒加载")]),t._v(" "),e("ul",[e("li",[t._v("官方解释\n"),e("ul",[e("li",[t._v("当打包构建应用时, JavaScript包会变的非常大, 影响页面加载")]),t._v(" "),e("li",[t._v("如果我们能把不同路由对应的组件分割成不同的代码块, 然后当路由被访问的时候才加载对应组件, 这样就更高效了")])])]),t._v(" "),e("li",[t._v("为什么使用路由懒加载?\n"),e("ul",[e("li",[t._v("我们打包后的文件一般情况都是放在一个js文件当中, 必然这个文件会非常大")]),t._v(" "),e("li",[t._v("如果我们一次性从网络请求下来这个文件, 可能花费很长时间, 甚至浏览器出现短暂白屏状况")]),t._v(" "),e("li",[t._v("如何避免这种情况: "),e("strong",[t._v("使用路由懒加载")]),t._v("就可以了")])])]),t._v(" "),e("li",[t._v("路由懒加载做了什么?\n"),e("ul",[e("li",[t._v("路由懒加载的主要作用就是: 将路由对应的组件打包成一个个的js代码块")]),t._v(" "),e("li",[t._v("只有这个路由被访问到的时候, 才加载对应的组件")])])])]),t._v(" "),e("h3",{attrs:{id:"_2-使用路由懒加载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-使用路由懒加载"}},[t._v("#")]),t._v(" 2.使用路由懒加载")]),t._v(" "),e("ul",[e("li",[t._v("方式一: 结合Vue的异步组件和Webpack的代码分析\n"),e("ul",[e("li",[t._v("const Home = resolve => { require.ensure(['../components/Home.vue'], () => { resolve(require('../components/Home.vue')) })};")])])]),t._v(" "),e("li",[t._v("方式二: AMD写法\n"),e("ul",[e("li",[t._v("const About = resolve => require(['../components/About.vue'], resolve);")])])]),t._v(" "),e("li",[e("strong",[t._v("方式三")]),t._v(": ES6中, 我们有更加简单的写法来组织Vue异步组件和Webpack的代码分隔\n"),e("ul",[e("li",[e("code",[t._v("const Home = () => import('../components/Home.vue')")])])])]),t._v(" "),e("li",[t._v("打包后效果图")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210417.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"六-路由嵌套"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#六-路由嵌套"}},[t._v("#")]),t._v(" 六. 路由嵌套")]),t._v(" "),e("h3",{attrs:{id:"_1-认识嵌套路由"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-认识嵌套路由"}},[t._v("#")]),t._v(" 1.认识嵌套路由")]),t._v(" "),e("ul",[e("li",[t._v("在 home 页面中, 我们通过 /home/news 和 /home/message 访问一些内容")]),t._v(" "),e("li",[t._v("在一个路径映射另一个组件, 访问这两个路径也会分别渲染两个组件")]),t._v(" "),e("li",[t._v("路径和组件的关系如下:")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210420.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"_2-嵌套路由实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-嵌套路由实现"}},[t._v("#")]),t._v(" 2.嵌套路由实现")]),t._v(" "),e("ul",[e("li",[t._v("1.创建组件")]),t._v(" "),e("li",[t._v("2.在路由映射规则中, 配置嵌套路由: "),e("code",[t._v("children: [{},{}]")])]),t._v(" "),e("li",[t._v("3.在需要嵌套该组件的页面中, 使用 router-link 和 router-view")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210446.png",alt:"img"}})]),t._v(" "),e("h3",{attrs:{id:"_3-嵌套路由的默认路径"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-嵌套路由的默认路径"}},[t._v("#")]),t._v(" 3.嵌套路由的默认路径")]),t._v(" "),e("ul",[e("li",[t._v("嵌套的路由也可以设置默认路径")])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("  const routes = [\n  {\n    path: '/home',\n    component: Home,\n    // 配置嵌套路由  \n    children: [\n    {\n      // 嵌套路由的默认路径\n      path: '',\n      redirect: 'news'\n    },\n    {\n      path: 'news',\n      component: News\n    },\n    {\n      path: 'message',\n      component: Message\n    }]\n  }]\n")])])]),e("h2",{attrs:{id:"七-query获取参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#七-query获取参数"}},[t._v("#")]),t._v(" 七. query获取参数")]),t._v(" "),e("h3",{attrs:{id:"_1-query获取"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-query获取"}},[t._v("#")]),t._v(" 1.query获取")]),t._v(" "),e("ul",[e("li",[t._v("1.创建新的组件 Profile.vue")]),t._v(" "),e("li",[t._v("2.配置路由映射")]),t._v(" "),e("li",[t._v("3.在 APP.vue 添加跳转的 "),e("code",[t._v("<router-link>")])])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 1. APP.vue 参数的传递 --\x3e")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),e("span",{pre:!0,attrs:{class:"token attr-value"}},[e("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{path: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/profile"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(",query: {\n  name: "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("boy"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(",\n  age: 18,\n  height: 1.88\n}}"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("档案"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- 2.  Profile.vue 获取query参数 --\x3e")]),t._v("\n "),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("h3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("{{$route.query}}"),e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token tag"}},[e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("h3")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])])]),e("img",{staticClass:"medium-zoom-image",attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210454.png",alt:"image-20200608181530494",loading:"lazy"}}),t._v(" "),e("h3",{attrs:{id:"_2-传递参数的方式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-传递参数的方式"}},[t._v("#")]),t._v(" 2.传递参数的方式")]),t._v(" "),e("ul",[e("li",[t._v("传递参数主要有两种类型: params和query")]),t._v(" "),e("li",[t._v("params\n"),e("ul",[e("li",[t._v("配置路由"),e("code",[t._v("path")]),t._v(":  "),e("code",[t._v("/user/:userId")])]),t._v(" "),e("li",[t._v("传递的方式: 在path后面拼接上需要传递的值")]),t._v(" "),e("li",[t._v("获取传递的参数: "),e("code",[t._v("$route.params.userId")])])])]),t._v(" "),e("li",[t._v("query\n"),e("ul",[e("li",[t._v("配置路由"),e("code",[t._v("path")]),t._v(":  "),e("code",[t._v("/profile")]),t._v(" (普通配置)")]),t._v(" "),e("li",[t._v("传递的方式: "),e("code",[t._v("{path: '/profile', query: {name: 'wuqian'} }")])]),t._v(" "),e("li",[t._v("获取传递的参数: "),e("code",[t._v("$route.query.name")])])])])]),t._v(" "),e("blockquote",[e("ul",[e("li",[t._v("当你不使用"),e("code",[t._v("<router-link>")]),t._v("来实现跳转")])]),t._v(" "),e("div",{staticClass:"language-vue extra-class"},[e("pre",{pre:!0,attrs:{class:"language-vue"}},[e("code",[t._v("this.$router.push({\n        path: '/profile',\n        query: {\n          name: 'wuqian',\n          age: 3,\n          height: 2.50\n        }\n      })\n")])])])]),t._v(" "),e("h3",{attrs:{id:"_3-router-和-route的区别"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-router-和-route的区别"}},[t._v("#")]),t._v(" 3. router 和 route的区别")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("$router")]),t._v("是VueRouter实例, 对路径相关导航操作")]),t._v(" "),e("li",[e("code",[t._v("route")]),t._v("是当前path映射的组件对象(当前活跃的路由对象), 可以获取"),e("code",[t._v("path, query")]),t._v("参数等")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://gitee.com/xmkm/cloudPic/raw/master/img/20200801210505.png",alt:"img"}})]),t._v(" "),e("h2",{attrs:{id:"八-导航守卫⚔"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#八-导航守卫⚔"}},[t._v("#")]),t._v(" 八. 导航守卫⚔")]),t._v(" "),e("h3",{attrs:{id:"_1-认识导航守卫"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-认识导航守卫"}},[t._v("#")]),t._v(" 1.认识导航守卫")]),t._v(" "),e("blockquote",[e("p",[t._v("官方解释: "),e("code",[t._v("vue-router")]),t._v("提供的导航守卫主要用来通过跳转或取消的方式导航守卫")])]),t._v(" "),e("ul",[e("li",[t._v("导航守卫\n"),e("ul",[e("li",[t._v("导航守卫就是路由跳转过程中的一些"),e("strong",[t._v("钩子函数")]),t._v(", 路由跳转是一个大的过程, 这个大的过程前后中等等细小的过程, 在每个过程都有一个函数, 这个函数能够让你操作一些其他的事情, 这就是导航守卫")]),t._v(" "),e("li",[e("code",[t._v("vue-router")]),t._v("提供了"),e("code",[t._v("beforeEach")]),t._v("和"),e("code",[t._v("afterEach")]),t._v("的钩子函数, 它们会在路由即将改变前和改变后触发")])])])]),t._v(" "),e("h4",{attrs:{id:"全局钩子函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#全局钩子函数"}},[t._v("#")]),t._v(" 全局钩子函数")]),t._v(" "),e("ul",[e("li",[t._v("可以直接在路由配量文件router.js里编写代码逻辑, 可以做一些全局性的路由拦截")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 全局前置守卫\nrouter.beforeEach((to, from, next) => {\n   // to: Route:即将要进入的目标路由对象\n // from: Route:当前导航正要离开的路由  \n    // 进行管道中的下一个钩子。如果全部钩子执行完了,则导航的状态就是confirmed (确认的)\n next();\n});\n// 全局后置守卫\nrouter.afterEach((to, from) => {\n    console.log(to.path);\n});\n复制代码\n")])])]),e("h3",{attrs:{id:"_2-导航守卫使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-导航守卫使用"}},[t._v("#")]),t._v(" 2.导航守卫使用")]),t._v(" "),e("ul",[e("li",[t._v("考虑一个需求: 在一个SPA应用中, 如何修改网页标题\n"),e("ul",[e("li",[t._v("第一应该想到在每一个路由对应的组件.vue文件中, 通过"),e("code",[t._v("mounted")]),t._v("生命周期函数, 对标题修改")]),t._v(" "),e("li",[t._v("但是当页面比较多是, 这种方式不易维护(因为需要在多个页面执行类似的代码)")]),t._v(" "),e("li",[t._v("有没有更好的方法呢? 使用导航守卫即可")])])]),t._v(" "),e("li",[t._v("在路由配置文件中使用导航守卫, 修改网页标题")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("// 在钩子当中定义一些标题, 可以利用meta来定义\nconst routes = [\n    {\n        path: '/user/:userId',\n        component: User,\n        meta: {\n            title: '用户'\n        }\n    },\n    {\n        path: '/profile',\n        component: Profile,\n        meta: {\n            title: '档案'\n        }\n    }\n]\n// ------导航守卫(guard)-----------\nrouter.beforeEach((to, from, next) => {\n  // 从from跳转到to\n  // from: 将要进行跳转的当前$route对象 (跳转前的一些操作)\n  // to: 跳转后$route对象 (跳转后的一些操作)\n  // next(): 调用该方法后, 才能进入下一个钩子\n  document.title = to.matched[0].meta.title;\n  next()\n})\n复制代码\n")])])]),e("h3",{attrs:{id:"_3-全局后置钩子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-全局后置钩子"}},[t._v("#")]),t._v(" 3.全局后置钩子")]),t._v(" "),e("ul",[e("li",[t._v("你也可以注册全局后置钩子, 然而和守卫不同的是, 这些钩子不会接受"),e("code",[t._v("next")]),t._v("函数也不会改变导航本身")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("router.afterEach((to, from) => {\n  // ...\n})\n复制代码\n")])])]),e("h3",{attrs:{id:"_4-路由独享钩子函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-路由独享钩子函数"}},[t._v("#")]),t._v(" 4.路由独享钩子函数")]),t._v(" "),e("ul",[e("li",[t._v("可以做一些单个路由的跳转拦截。在配量文件编写代码即可")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const router = new VueRouter({\n  routes: [\n    {\n      path: '/foo',\n      component: Foo,\n      beforeEnter: (to, from, next) => {\n        // ...\n      }\n    }\n  ]\n})\n复制代码\n")])])]),e("h3",{attrs:{id:"_5-组件内钩子函数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-组件内钩子函数"}},[t._v("#")]),t._v(" 5.组件内钩子函数")]),t._v(" "),e("ul",[e("li",[t._v("更细粒度的路由拦截, 只针对一个进入某一个组件的拦截")])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("const Foo = {\n  template: `...`,\n  beforeRouteEnter (to, from, next) {\n    // 在渲染该组件的对应路由被 confirm 前调用\n    // 不！能！获取组件实例 `this`\n    // 因为当钩子执行前，组件实例还没被创建\n  },\n  beforeRouteUpdate (to, from, next) {\n    // 在当前路由改变，但是该组件被复用时调用\n    // 举例来说，对于一个带有动态参数的路径 /foo/:id，在 /foo/1 和 /foo/2 之间跳转的时候，\n    // 由于会渲染同样的 Foo 组件，因此组件实例会被复用。而这个钩子就会在这个情况下被调用。\n    // 可以访问组件实例 `this`\n  },\n  beforeRouteLeave (to, from, next) {\n    // 导航离开该组件的对应路由时调用\n    // 可以访问组件实例 `this`\n  }\n}\n复制代码\n")])])]),e("h4",{attrs:{id:"钩子函数使用场景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#钩子函数使用场景"}},[t._v("#")]),t._v(" 钩子函数使用场景")]),t._v(" "),e("blockquote",[e("p",[t._v("其实路由钩子函数在项目开发中用的并不是非常多，一般用于登录状态的校验，没有登录跳转到登录页；权限的校验等等。当然随着项目的开发进展，也会有更多的功能可能用钩子函数实现会更好，我们知道有钩子函数这个好东西就行了，下次遇到问题脑海就能浮现，噢，这个功能用钩子实现会比较棒。我们的目的就达到了。")])]),t._v(" "),e("h2",{attrs:{id:"九-keep-alive组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#九-keep-alive组件"}},[t._v("#")]),t._v(" 九. keep-alive组件")]),t._v(" "),e("h3",{attrs:{id:"_1-页面缓存"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-页面缓存"}},[t._v("#")]),t._v(" 1.页面缓存")]),t._v(" "),e("ul",[e("li",[t._v("在Vue构建的单页面应用(SPA)中, 路由模块一般使用"),e("code",[t._v("vue-router")])]),t._v(" "),e("li",[e("code",[t._v("vue-router")]),t._v("不保存组件被切换的状态, 它进行push或replcae时, 旧组件会被销毁, 新组建会被创建, 再走一遍完整的生命周期")]),t._v(" "),e("li",[t._v("但是有的时候, 我们有一些需求,: 比如返回到跳转前用户点击的列表页面, 但是当我们返回的时候没有之前的记录,对于这种页面缓存需求, 我们可以使用"),e("code",[t._v("keep-alive")]),t._v("组件来解决")])]),t._v(" "),e("h3",{attrs:{id:"_2-keep-alive组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-keep-alive组件"}},[t._v("#")]),t._v(" 2.keep-alive组件")]),t._v(" "),e("ul",[e("li",[e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("keep-alive\n")])])]),e("p",[t._v("是 Vue 内置的一个组件, 可以使")]),t._v(" "),e("p",[t._v("被包含的组件保留状态")]),t._v(" "),e("p",[t._v(", 或")]),t._v(" "),e("p",[t._v("避免重新渲染")]),t._v(" "),e("ul",[e("li",[t._v("两个非常重要的"),e("strong",[t._v("属性")]),t._v(":")]),t._v(" "),e("li",[e("code",[t._v("inclue")]),t._v(": 值是字符串或正则表达, 只有匹配的组件会被缓存")]),t._v(" "),e("li",[e("code",[t._v("exclue")]),t._v(": 值是字符串或正则表达, 任何匹配的组件都不会被缓存")]),t._v(" "),e("li",[t._v("千万注意: 字符串匹配的是Vue组件中name属性, 如果没有配置"),e("code",[t._v("name")]),t._v("属性 keep-alive 将不会生效")])])]),t._v(" "),e("li",[e("p",[t._v("使用"),e("code",[t._v("keep-alive")]),t._v(": 在"),e("code",[t._v("keep-alive")]),t._v("包裹中的视图组件都会被缓存")])])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\x3c!-- Profile,User是 Vue 组件中的name属性(千万注意,如果没有配置将不会生效) --\x3e\n<keep-alive exclude="Profile,User">\n  <router-view></router-view>\n</keep-alive>\n复制代码\n')])])]),e("ul",[e("li",[t._v("另外：activated,deactivated这两个生命周期函数一定是要在使用了keep-alive组件后才会有的，否则则不存在")])]),t._v(" "),e("hr")])}),[],!1,null,null,null);a.default=r.exports}}]);